<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>AM</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on AM</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 20 Mar 2024 16:24:21 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>hugo &#43; github &#43; netlify构建blog</title>
      <link>http://localhost:1313/posts/%E5%B1%85%E4%B8%AD/</link>
      <pubDate>Wed, 20 Mar 2024 16:24:21 +0800</pubDate>
      <guid>http://localhost:1313/posts/%E5%B1%85%E4%B8%AD/</guid>
      <description>前言 居中一直是一个让人头疼的问题，可以直接使用 flex 或者 grid 来直接做成效果，也可以通过一些技巧来实现同样的效果，比如一个内联元素居中可以使用 flex 的 justify-content:center; 和 align-items: center;来实现，也可以通过 text-align: center 和 line-height 来实现。需要记住，这篇文章的并不是来比较各个方法之间的优劣，只是对我所学的居中方法的梳理。 Go!
一、水平居中 1.内联元素 内联元素居中需要在父元素上使用text-align: center; inline-block （宽度和长度生效） 父元素为块级元素使用text-align: center;水平居中。
2.块级元素水平居中 （1）单个元素 使用margin:0 auto;
（2）父元素为块级元素 1) 使用 table 布局左右自适应 .inner { display: table; margin: 0 auto; } 2) 多个元素在一行居中 i.将子元素设置为display:inline-block; 父元素设置text-align: center;，实现水平居中
ii.使用display: flex; 父元素使用 display: flex; justify-cntent: center;
3) 多个元素在一列中居中 父元素text-align:center; ，子元素margin: 0 auto;
(3) 使用定位(position)居中 父元素position: relative;，子元素position: absolute;
position: absolute; left: 50%; transform: translateX(-50%); 4、浮动元素水平居中 清除浮动。</description>
    </item>
    <item>
      <title>hugo &#43; github &#43; netlify构建blog</title>
      <link>http://localhost:1313/posts/blog/</link>
      <pubDate>Mon, 18 Mar 2024 16:24:21 +0800</pubDate>
      <guid>http://localhost:1313/posts/blog/</guid>
      <description>一、安装 安装hugo (windows)
winget install Hugo.Hugo.Extended 其他的根据官网安装
hugo version //hugo v0.123.8-5fed9c591b694f314e5939548e11cc3dcb79a79c+extended windows/amd64 BuildDate=2024-03-07T13:14:42Z VendorInfo=gohugoio 成功 git安装略过
二、创建页面 hugo new site test --format yaml 安装主题 （其他的可以自己试，根据文档设置，主题官网）
git clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1 编辑hugo.yaml 添加 theme=PaperMod
添加第一篇文章 hugo new posts/first.md 注意：自动生成的md文件中 draft 默认为true，改成false 建议不使用，因为我设置的是yaml，创建一个yaml格式的更好用
--- title: &amp;#34;First&amp;#34; date: 2022-12-22T08:39:46+08:00 draft: false tags: [&amp;#39;html&amp;#39;,&amp;#39;css&amp;#39;] categories: [&amp;#39;frontend&amp;#39;] cover: image: img/cover1.jpg alt: &amp;#39;single girl&amp;#39; caption: &amp;#39;wow&amp;#39; --- # hello!!! welcome to my blog hugo server # 页面启动 添加参数</description>
    </item>
    <item>
      <title>About</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/about/</guid>
      <description>前端菜鸟，努力学习中 技术栈： - HTML5- CSS3- JavaScript- jQuery- Bootstrap- Sass- Git- Webpack- Vue- Vuex- Vue Router- Axios- Node.js- Express- MongoDB- Mongoose- Redis项目经验： - [Vue-Element-Admin](https://github.com/lin-xin/vue-element-admin)- [Vue-Admin](https://github.com/lin-xin/vue-admin)- [Vue-Element-Admin-Plus](https://github.com/lin-xin/vue-element-admin-plus) </description>
    </item>
  </channel>
</rss>
